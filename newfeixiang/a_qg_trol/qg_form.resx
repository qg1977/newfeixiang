<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAAAAEACACoCAAAFgAAACgAAAAgAAAAQAAAAAEACAAAAAAAAAQAAAAAAAAAAAAAAAEAAAAA
        AAAEBPwAWPjoAO8IEgBY+PkAHPz8ABz0/AAU/PQARPj5AAz87ABWrPoAZW74AOE1ZgA3+ukAoXDKAOh1
        jABkGiQAFPz8ABT0/AAD/v8ADPz0AAT87AAG6/gAFAT0ALEIFQAMDOwADATsAAXq6gB45/oAZ/fpAGtC
        jgA0/PwABQX9ACz89AAM/PwADPT8AAT89AAE9PQAWVXNABQU/AA36OgAFAz8ABQE/ACWHCoABAzsACj6
        6gAnCfwAHPzsAAT8/AAOioYABPT8ABBoYwAMFPwADAz8AAwE/AAEDPQAS1L2APIqSQAq5M8ABAT0AIb4
        +gBiVvYAOUj4AFOX2gAc/OMAJPz8AIUtSgAk9PwAHPz0ADjq+QA9S8QABAz8AAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAJycnJycnJycnJycnJycnJycnJw0nJycnJycnJycnJycnJycnJycnJycnJycnJycnJzcfHx8f
        JycnJycnJycnJycvLy8vEi8vEhIvEhISEhISEx8fHx8ADCEvEiIQED8nJxASEhISEhISEhISEhISEhIS
        BikfHx8SEhISEhIhJycnEhISEhISEhISEhISEhISEhISEgofHzgSEhISITknJycSEhISEhISEhISEhIS
        EhISEhISEkMANRIhEhIhJycnJxISEhISQhISIRISEhISEhISEhISEhI6GSEhEi8nJycnIRISEhIbHwIS
        EhISEhISEhISEhISEhIfABASEicnJychEhISAB8fOg4hEhISEhIjAB8fHxMSEjwfIxIhJycnJxISIQAf
        Hx8fHwQSEhISEgAfHx8fRjISIx8rEhInJycnEiEDHx8fHx8fACESEhISHx8fHx8fHywSPR8jEhInJycS
        Eh8fHx8fHx8fHhISEhIfHx8fHx8fABEEHw8SIycnJxIvHx8fHx8fHx86IxISEh8fHx8fHx8fLRIfHxIS
        JycnEhEfHx8fHx8fHwAUEhIvHx8fHx8fHx8AIR8fEi8nJycSIx8fHx8fHx8fHyoSEhQfHx8fHx8fHxch
        Hx8SLycnJxIhHx8fHx8fHx8fGRISEh8fHx8fHx8ALxMfHxIQJycnEiESFh8fHx8fHx8fEhITHx8fHx8f
        HwASEh8AEhInJycSEhIhAB8fHx8fHx8PLz0fHx8fHx8fCxIJHyESEicnJxISEhISEjUfHx8fHx9FAB8f
        Hx8fHzQhBx9DEhIhJycnEhISEhISEhAAAB8fHx8fHx8fHx9GEyZGIBISEhInJwESEhISEhISEhIjHx8f
        Hx8fHx8fHxofHy8FEhISEicnJBISEhISEhISEhIVHx8fHx8fRiUzNCMhEhISEhITJycvEhISEhISEhIv
        CAAfHx8fHx8YMBQjEgUSEhISEiEnJyESEhISEhIQOx8fHx8fHzofHx8fHx8fNRISEhISLycnIRISEhIS
        ITYfHx8fHx8AMR8fHx8fHx8fEhISEhIvJycEEhISEhAAHx8fHx8fHx0vRB8fHx8fHx8SEhISEhInJxIS
        EhISNR8fHx8fHx8fQRISHx8fHx8fABISEhISEicnBBISEhIfHx8fHx8fHx8CIRISNh8fHwASEhISEhIj
        JycSEhISEjofHx8fHx8fHy4SEi8hHwA+JBISEhISEhIcJxISEhISLx8fHx8fHx8pEhISEhIhEhISEhIS
        EhISEhInIRISEhISEiEQADUAKEASEhISEhISEhISEhISEhISEicnBCESEiMSEhJAEhISEhISEhIQIRIv
        IhIhIRISL0AnJwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAA
</value>
  </data>
</root>